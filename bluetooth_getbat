#! /bin/python

import bluetooth
import sys
import os
import subprocess
from time import sleep
from fractions import Fraction
from re import findall


def send(sock, message):
    sock.send(b"\r\n" + message + b"\r\n")


def p(msg, f):
    with open(f, "w") as f:
        f.write(msg)


if __name__ == "__main__":
    r = Fraction(100) / 24
    device = sys.argv[1]
    port = 3
    s = bluetooth.BluetoothSocket(bluetooth.RFCOMM)
    state = subprocess.run(["bluetoothctl", "show"], stdout=subprocess.PIPE)
    out = state.stdout.decode().strip()
    if out == "No default controller available":
        subprocess.run(["rfkill", "block", "0"])
        subprocess.run(["rfkill", "unblock", "0"])
        subprocess.run(["bluetoothctl", "power", "on"])
        cur = subprocess.run(["bluetoothctl", "show"], stdout=subprocess.PIPE)
        while "Powered: yes" not in cur.stdout.decode():
            cur = subprocess.run(["bluetoothctl", "show"],
                                 stdout=subprocess.PIPE)
            sleep(0.1)
    elif findall("Powered: (.+)\n", out)[0] == "no":
        subprocess.run(["bluetoothctl", "power", "on"])
        cur = subprocess.run(["bluetoothctl", "show"], stdout=subprocess.PIPE)
        while "Powered: yes" not in cur.stdout.decode():
            cur = subprocess.run(["bluetoothctl", "show"],
                                 stdout=subprocess.PIPE)
            sleep(0.1)
    else:
        pow = subprocess.run(["bluetoothctl", "info"], stdout=subprocess.PIPE)
        out = pow.stdout.decode().strip()
        if out != "Missing device address argument":
            subprocess.run(["bluetoothctl", "disconnect", device])
    s.connect((device, port))
    subprocess.run(["bluetoothctl", "connect", device])
    try:
        while True:
            recv = s.recv(128)
            if len(power := findall(b"XEVENT=BATTERY,([0-9]+),", recv)) > 0:
                char = int(findall(b",([0-9]+)\r$", recv)[0].decode())
                bat = str((int(power[0].decode()) * r).__round__())
                if char:
                    p("ðŸ”Œ", "/tmp/bluetooth_ch")
                else:
                    p("ðŸ›‘", "/tmp/bluetooth_ch")
                p(bat, "/tmp/bluetooth_bat")
            send(s, b"OK")
    except bluetooth.btcommon.BluetoothError:
        if os.path.isfile("/tmp/bluetooth_bat"):
            os.remove("/tmp/bluetooth_bat")
        if os.path.isfile("/tmp/bluetooth_ch"):
            os.remove("/tmp/bluetooth_ch")
        exit(0)
